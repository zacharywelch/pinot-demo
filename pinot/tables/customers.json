{
  "tableName": "customers",
  "tableType": "REALTIME",
  "segmentsConfig": {
    "timeColumnName": "event_at",
    "replication": "1",
    "schemaName": "customers"
  },
  "tenants": {
    "broker": "DefaultTenant",
    "server": "DefaultTenant"
  },
  "routing": {
    "instanceSelectorType": "strictReplicaGroup"
  },
  "tableIndexConfig": {
    "loadMode": "MMAP",
    "streamConfigs": {
      "streamType": "kafka",
      "stream.kafka.consumer.type": "simple",
      "stream.kafka.topic.name": "customers-topic",
      "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.stream.kafka.KafkaJSONMessageDecoder",
      "stream.kafka.consumer.factory.class.name": "org.apache.pinot.plugin.stream.kafka20.KafkaConsumerFactory",
      "stream.kafka.broker.list": "kafka:9092",
      "stream.kafka.decoder.prop.jsontypeToRecord": true,
      "stream.kafka.decoder.prop.format": "JSON",
      "stream.kafka.consumer.prop.auto.offset.reset": "smallest"
    }
  },
  "ingestionConfig": {
    "transformConfigs": [
      {
        "columnName": "customer_id",
        "transformFunction": "JSONPATH(object, '$.id')"
      },
      {
        "columnName": "team_id",
        "transformFunction": "tenant_id"
      },
      {
        "columnName": "email",
        "transformFunction": "JSONPATH(object, '$.email')"
      },
      {
        "columnName": "event_at",
        "transformFunction": "created_at"
      },
      {
        "columnName": "event_id",
        "transformFunction": "id"
      }
    ],
    "filterConfig": {
      "filterFunction": "strcmp(event_type, 'customer.updated') <> 0"
    }
  },
  "upsertConfig": {
    "mode": "FULL",
    "primaryKeyColumns": ["customer_id"]
  },
  "metadata": {
    "customConfigs": {
      "primaryKeyColumns": "customer_id"
    }
  }
}
